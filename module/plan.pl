#====================================================================================================
#
#	使用量計算関連モジュール
#	plan.pl
#
#	---------------------------------------------------------------------------
#
#	2012.07.27 start
#
#====================================================================================================
package PLAN;

use strict;
use utf8;

#------------------------------------------------------------------------------------------------------------
#
#	モジュールコンストラクタ - new
#	-------------------------------------------
#	@param	なし
#	@return	モジュールオブジェクト
#
#------------------------------------------------------------------------------------------------------------
sub new
{
	my $this = shift;
	my $obj = {};
	my (%Plan, %Eco);
	
	%Plan = (
		'rate'		=> 0,
	);
	%Eco  = (
		'rate'		=> 0,
	);
	
	$obj = {
		'PLAN'		=> \%Plan,
		'ECO'		=> \%Eco,
	};
	
	bless $obj, $this;
	
	return $obj;
}

#------------------------------------------------------------------------------------------------------------
#
#	プラン情報全取得
#	-------------------------------------------
#	@param	$SQL		SQLハンドル
#			$plan		プラン
#	@return	エラーコード
#			1 : 成功
#			0 : 失敗(ユーザが存在しないもしくはユニークでない)
#
#------------------------------------------------------------------------------------------------------------
sub getPlanInfo
{
	my $this = shift;
	my ($SQL, $plan) = @_;
	my ($sth, $i, $res);
	
	$i = 0;
	$res = undef;
	
	# SQL文の実行
	$sth = $SQL->{'DBH'}->prepare("SELECT * FROM `plan` WHERE `type` LIKE '".$plan."'");
	$sth->execute;
	
	$res = $sth->fetchrow_arrayref();
	
	# コマンドを実行した結果何も帰って来なかった場合
	if ( $res eq undef ) {
		return 0;
	}
	
	# データを挿入
	foreach ( @{$res} ) {
		$this->{'PLAN'}->{$sth->{NAME}->[$i]} = $_;
		$i++;
	}
	
	$sth->finish;
	
	return 1;
}

#------------------------------------------------------------------------------------------------------------
#
#	ecologica情報全取得
#	-------------------------------------------
#	@param	$SQL		SQLハンドル
#			$plan		プラン
#	@return	エラーコード
#			1 : 成功
#			0 : 失敗(ユーザが存在しないもしくはユニークでない)
#
#------------------------------------------------------------------------------------------------------------
sub getEcoInfo
{
	my $this = shift;
	my ($SQL, $plan) = @_;
	my ($sth, $i, $res);
	
	$i = 0;
	$res = undef;
	
	# SQL文の実行
	$sth = $SQL->{'DBH'}->prepare("SELECT * FROM `ecologica` WHERE `type` LIKE '".$plan."'");
	$sth->execute;
	
	$res = $sth->fetchrow_arrayref();
	
	# コマンドを実行した結果何も帰って来なかった場合
	if ( $res eq undef ) {
		return 0;
	}
	
	# データを挿入
	foreach ( @{$res} ) {
		$this->{'ECO'}->{$sth->{NAME}->[$i]} = $_;
		$i++;
	}
	
	$sth->finish;
	
	return 1;
}

#------------------------------------------------------------------------------------------------------------
#
#	プラン情報取得
#	-------------------------------------------
#	@param	$key		取得キー
#			$default	デフォルト
#	@return	データ
#
#------------------------------------------------------------------------------------------------------------
sub getPlan
{
	my $this = shift;
	my ($key, $default) = @_;
	my ($val);
	
	$val = $this->{'PLAN'}->{$key};
	
	return (defined $val ? $val : (defined $default ? $default : ''));
}


#------------------------------------------------------------------------------------------------------------
#
#	ecologicaプラン情報取得
#	-------------------------------------------
#	@param	$key		取得キー
#			$default	デフォルト
#	@return	データ
#
#------------------------------------------------------------------------------------------------------------
sub getEco
{
	my $this = shift;
	my ($key, $default) = @_;
	my ($val);
	
	$val = $this->{'ECO'}->{$key};
	
	return (defined $val ? $val : (defined $default ? $default : ''));
}

#============================================================================================================
#	モジュール終端
#============================================================================================================
1;
